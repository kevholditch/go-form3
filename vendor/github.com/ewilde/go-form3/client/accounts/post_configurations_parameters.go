// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ewilde/go-form3/models"
)

// NewPostConfigurationsParams creates a new PostConfigurationsParams object
// with the default values initialized.
func NewPostConfigurationsParams() *PostConfigurationsParams {
	var ()
	return &PostConfigurationsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostConfigurationsParamsWithTimeout creates a new PostConfigurationsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostConfigurationsParamsWithTimeout(timeout time.Duration) *PostConfigurationsParams {
	var ()
	return &PostConfigurationsParams{

		timeout: timeout,
	}
}

// NewPostConfigurationsParamsWithContext creates a new PostConfigurationsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostConfigurationsParamsWithContext(ctx context.Context) *PostConfigurationsParams {
	var ()
	return &PostConfigurationsParams{

		Context: ctx,
	}
}

// NewPostConfigurationsParamsWithHTTPClient creates a new PostConfigurationsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostConfigurationsParamsWithHTTPClient(client *http.Client) *PostConfigurationsParams {
	var ()
	return &PostConfigurationsParams{
		HTTPClient: client,
	}
}

/*PostConfigurationsParams contains all the parameters to send to the API endpoint
for the post configurations operation typically these are written to a http.Request
*/
type PostConfigurationsParams struct {

	/*AccountConfigurationCreationRequest*/
	AccountConfigurationCreationRequest *models.AccountConfigurationCreation

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post configurations params
func (o *PostConfigurationsParams) WithTimeout(timeout time.Duration) *PostConfigurationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post configurations params
func (o *PostConfigurationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post configurations params
func (o *PostConfigurationsParams) WithContext(ctx context.Context) *PostConfigurationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post configurations params
func (o *PostConfigurationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post configurations params
func (o *PostConfigurationsParams) WithHTTPClient(client *http.Client) *PostConfigurationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post configurations params
func (o *PostConfigurationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountConfigurationCreationRequest adds the accountConfigurationCreationRequest to the post configurations params
func (o *PostConfigurationsParams) WithAccountConfigurationCreationRequest(accountConfigurationCreationRequest *models.AccountConfigurationCreation) *PostConfigurationsParams {
	o.SetAccountConfigurationCreationRequest(accountConfigurationCreationRequest)
	return o
}

// SetAccountConfigurationCreationRequest adds the accountConfigurationCreationRequest to the post configurations params
func (o *PostConfigurationsParams) SetAccountConfigurationCreationRequest(accountConfigurationCreationRequest *models.AccountConfigurationCreation) {
	o.AccountConfigurationCreationRequest = accountConfigurationCreationRequest
}

// WriteToRequest writes these params to a swagger request
func (o *PostConfigurationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccountConfigurationCreationRequest == nil {
		o.AccountConfigurationCreationRequest = new(models.AccountConfigurationCreation)
	}

	if err := r.SetBodyParam(o.AccountConfigurationCreationRequest); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
