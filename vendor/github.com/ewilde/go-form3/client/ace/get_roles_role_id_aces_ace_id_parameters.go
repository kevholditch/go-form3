// Code generated by go-swagger; DO NOT EDIT.

package ace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetRolesRoleIDAcesAceIDParams creates a new GetRolesRoleIDAcesAceIDParams object
// with the default values initialized.
func NewGetRolesRoleIDAcesAceIDParams() *GetRolesRoleIDAcesAceIDParams {
	var ()
	return &GetRolesRoleIDAcesAceIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRolesRoleIDAcesAceIDParamsWithTimeout creates a new GetRolesRoleIDAcesAceIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRolesRoleIDAcesAceIDParamsWithTimeout(timeout time.Duration) *GetRolesRoleIDAcesAceIDParams {
	var ()
	return &GetRolesRoleIDAcesAceIDParams{

		timeout: timeout,
	}
}

// NewGetRolesRoleIDAcesAceIDParamsWithContext creates a new GetRolesRoleIDAcesAceIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRolesRoleIDAcesAceIDParamsWithContext(ctx context.Context) *GetRolesRoleIDAcesAceIDParams {
	var ()
	return &GetRolesRoleIDAcesAceIDParams{

		Context: ctx,
	}
}

// NewGetRolesRoleIDAcesAceIDParamsWithHTTPClient creates a new GetRolesRoleIDAcesAceIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRolesRoleIDAcesAceIDParamsWithHTTPClient(client *http.Client) *GetRolesRoleIDAcesAceIDParams {
	var ()
	return &GetRolesRoleIDAcesAceIDParams{
		HTTPClient: client,
	}
}

/*GetRolesRoleIDAcesAceIDParams contains all the parameters to send to the API endpoint
for the get roles role ID aces ace ID operation typically these are written to a http.Request
*/
type GetRolesRoleIDAcesAceIDParams struct {

	/*AceID
	  Ace Id

	*/
	AceID strfmt.UUID
	/*RoleID
	  Role Id

	*/
	RoleID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get roles role ID aces ace ID params
func (o *GetRolesRoleIDAcesAceIDParams) WithTimeout(timeout time.Duration) *GetRolesRoleIDAcesAceIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get roles role ID aces ace ID params
func (o *GetRolesRoleIDAcesAceIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get roles role ID aces ace ID params
func (o *GetRolesRoleIDAcesAceIDParams) WithContext(ctx context.Context) *GetRolesRoleIDAcesAceIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get roles role ID aces ace ID params
func (o *GetRolesRoleIDAcesAceIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get roles role ID aces ace ID params
func (o *GetRolesRoleIDAcesAceIDParams) WithHTTPClient(client *http.Client) *GetRolesRoleIDAcesAceIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get roles role ID aces ace ID params
func (o *GetRolesRoleIDAcesAceIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAceID adds the aceID to the get roles role ID aces ace ID params
func (o *GetRolesRoleIDAcesAceIDParams) WithAceID(aceID strfmt.UUID) *GetRolesRoleIDAcesAceIDParams {
	o.SetAceID(aceID)
	return o
}

// SetAceID adds the aceId to the get roles role ID aces ace ID params
func (o *GetRolesRoleIDAcesAceIDParams) SetAceID(aceID strfmt.UUID) {
	o.AceID = aceID
}

// WithRoleID adds the roleID to the get roles role ID aces ace ID params
func (o *GetRolesRoleIDAcesAceIDParams) WithRoleID(roleID strfmt.UUID) *GetRolesRoleIDAcesAceIDParams {
	o.SetRoleID(roleID)
	return o
}

// SetRoleID adds the roleId to the get roles role ID aces ace ID params
func (o *GetRolesRoleIDAcesAceIDParams) SetRoleID(roleID strfmt.UUID) {
	o.RoleID = roleID
}

// WriteToRequest writes these params to a swagger request
func (o *GetRolesRoleIDAcesAceIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param ace_id
	if err := r.SetPathParam("ace_id", o.AceID.String()); err != nil {
		return err
	}

	// path param role_id
	if err := r.SetPathParam("role_id", o.RoleID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
